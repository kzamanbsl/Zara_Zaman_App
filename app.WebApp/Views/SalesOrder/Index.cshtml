@using app.Utility
@model app.Services.SalesOrderServices.SalesOrderViewModel
@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
    int SN = 1;
}

<div class="content-header">
    <div class="container-fluid ">
        <div class="breadcrumb d-flex justify-content-between align-items-center  pl-3 pr-3">
            <ol class="breadcrumb mb-0 p-0">
                <li class="breadcrumb-item"><a href="/Admin/Index">Home </a></li>
                <li class="breadcrumb-item active"> Order List </li>
            </ol>
            <div>
                <a asp-action="AddSalesOrderAndDetail"><i class="fa fa-plus"></i>Add Order </a>
            </div>
        </div>
    </div>
</div>

<section class="content">
    <div class="container-fluid">
        <div class="card">
            <div class="card-header">
                <div class="row w-100">
                    <div class="col-sm-3">
                        <h5> <i class="fas fa-list"></i> All Sales Order</h5>
                    </div>
                </div>
            </div>
            <div class="card-body">
                <div class="table-responsive">
                    <table id="SalesOrdertable" class="table table-sm table-bordered">
                        <thead>
                            <tr>
                                <th>SL</th>
                                <th class="text-center">Sales No</th>
                                <th class="text-center">Order Date</th>
                                <th class="text-center">Customer</th>
                                <th class="text-center">Delivery Date</th>
                                <th class="text-center">Payment Status</th>
                                <th class="text-center">Order Status</th>
                                <th class="text-center">Total Amount</th>
                                <th class="text-center">Action</th>
                            </tr>
                        </thead>

                        <tbody>
                            @foreach (var item in Model.SalesOrderList)
                            {
                                <tr>
                                    <td style="width:10px;">@(++SN)</td>
                                    <td>@item.OrderNo</td>
                                    <td>@item.SalesDate.ToString("dd-MM-yyyy")</td>
                                    <td>@item.CustomerName</td>
                                    <td>@item.DeliveryDate?.ToString("dd-MM-yyyy")</td>
                                    <td>@item.PaymentStatusName</td>
                                    <td>@item.OrderStatusName</td>
                                    <td>@item.TotalAmount</td>

                                    <td class="text-center">
                                        <a id="@item.Id" onclick=" makeEditble(@item.Id);" class="linkPointer" data-toggle="modal" data-target="#editPurchaseOrderModal" title="Edit" data-placement="top"><i class="text-warning fas fa-edit" aria-hidden="true"></i></a> |
                                        @Html.ActionLink("", "DeleteSalesOrder", new { id = item.Id }, new { @title = "Delete", @class = "text-danger fas fa-trash", onclick = "return confirm('Are you sure you want to delete this?')" }) |
                                        @Html.ActionLink("", "PurchaseDetails", new { id = item.Id }, new { @title = "Details", @class = "text-primary fas fa-eye"})
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</section>


@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
