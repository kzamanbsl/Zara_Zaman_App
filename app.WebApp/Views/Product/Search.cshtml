@model app.Services.ProductServices.ProductSearchDto
@{
    ViewData["Title"] = "Search";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="content-header">
    <div class="container-fluid ">
        <div class="breadcrumb d-flex justify-content-between align-items-center  pl-3 pr-3">
            <ol class="breadcrumb mb-0 p-0">
                <li class="breadcrumb-item"><a href="/Admin/Index">Home</a></li>
                <li class="breadcrumb-item active"> Product List </li>
            </ol>
            <div>
                <a asp-action="AddRecord"><i class="fa fa-plus"></i> Add Product </a>
            </div>
        </div>
    </div>
</div>


<section class="content">
    <div class="container-fluid">
        <div class="card">
            <div class="card-header">
                <div class="row w-100">
                    <div class="col-sm-3">
                        <h5> <i class="fas fa-list"></i> All Products </h5>
                    </div>
                </div>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-sm-12">
                        <form method="post" asp-controller="Product" asp-action="Search">
                            <div class="row">
                                <div class="col-sm-6">
                                    <div class="form-group">
                                        <label>Category</label>
                                        <select class="form-control" asp-for="CategoryId" asp-items="ViewBag.ProductCategories">
                                            <option value="0" selected>--Select Category--</option>
                                            <span asp-validation-for="CategoryId" class="text-danger"></span>
                                        </select>
                                    </div>
                                </div>
                                <div class="col-sm-6">
                                    <div class="form-group">
                                        <label>Unit</label>
                                        <select class="form-control" asp-for="UnitId" asp-items="ViewBag.Units">
                                            <option value="0" selected>--Select Unit--</option>
                                            <span asp-validation-for="UnitId" class="text-danger"></span>
                                        </select>
                                    </div>
                                </div>
                            </div>

                            <div class="form-group text-right">
                                @*<a href="@Url.Action("Search","Product")"><input type="submit" formtarget="_blank" value="Preview" class="btn btn-preview btn-width" /></a>*@
                                @*<button asp-controller="Product" asp-action="Search" type="submit" title="Download" class="btn btn-report btn-width"><i class="fa fa-download"></i></button>*@
                                <input id="ProductDTSearchBtn" type="button" value="Search" class="btn btn-info btn-width" />
                                <a href="@Url.Action("Search","Product")"><input type="button" value="Clear" class="btn btn-warning btn-width" /></a>
                            </div>
                        </form>
                    </div>
                </div>
                <hr/>
                <div class="row">
                    <div class="col-sm-12">
                        <div class="table-responsive">
                            <table id="ProductSearchTable" class="table table-bordered table-sm">
                                <thead>
                                    <tr>
                                        <th class="text-center">
                                            @Html.DisplayNameFor(model => model.SerialNo)
                                        </th>
                                        <th class="text-center">
                                            @Html.DisplayNameFor(model => model.CategoryName)
                                        </th>
                                        <th class="text-center">
                                            @Html.DisplayNameFor(model => model.Name)
                                        </th>                               
                                        <th class="text-center">
                                            @Html.DisplayNameFor(model => model.UnitName)
                                        </th>                                      
                                        <th class="text-center">
                                            @Html.DisplayNameFor(model => model.HasModelNo)
                                        </th>
                                        <th class="text-center">
                                            @Html.DisplayNameFor(model => model.Action)
                                        </th>
                                    </tr>
                                </thead>
                                <tbody>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

</section>

<div class="modal fade" tabindex="-1" id="deleteModal" data-toggle="modal" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <form asp-action="Delete" asp-controller="Product" method="post">
                <div class="modal-header bg-light">
                    <h5 class="modal-title " id="exampleModalLabel">Delete Shift</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>

                <div class="modal-body">
                    <h3 class="text-danger">Are you sure to delete this?</h3>
                    @Html.HiddenFor(model => model.Id, new { id = "hidDeleteId" })

                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-danger">Delete</button>
                </div>
            </form>

        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        $(document).ready(function () {
            $('#Configuration').addClass('menu-open');
            $('#ProductSearch').addClass('active');

            search();
        });

        $(document.body).on("click", "#ProductDTSearchBtn", function () {
            search();
        });

        function getSearchObject() {

            var searchVm = {
                "CategoryId": $("#CategoryId").val(),
                "UnitId": $("#UnitId").val(),
            }
            return searchVm;
        }

        function search() {
            var searchVm = getSearchObject();

            if ($.fn.DataTable.isDataTable("#ProductSearchTable")) {
                var table = $("#ProductSearchTable").DataTable();
                table.destroy();
            }

            var params = "";
            if (searchVm != undefined && searchVm !== "") {
                params = { searchVm: searchVm }
            }

            var oTable = $("#ProductSearchTable").DataTable({
                "aLengthMenu": [[25, 50, 100, 200], [25, 50, 100, 200]],
                "iDisplayLength": 25,
                "processing": true,
                "serverSide": true,
                "bSort": false,
                "ajax": {
                    url: "/Product/Search",
                    type: "POST",
                    data: params
                },

                "columns": [
                    {
                        data: "SerialNo",
                        render: function (data, type, row, meta) {
                            return row.serialNo;
                        }
                    },
                    {
                        data: "CategoryName",
                        render: function (data, type, row, meta) {
                            return row.categoryName;
                        }
                    },
                    {
                        data: "Name",
                        render: function (data, type, row, meta) {
                            return row.name;
                        }
                    },
                                  
                    {
                        data: "UnitName",
                        render: function (data, type, row, meta) {
                            return row.unitName;
                        }
                    },
                    {
                        data: "HasModelNo",
                        render: function (data, type, row, meta) {
                            return row.hasModelNo;
                        }
                    },
                    // {
                    //     data: "TradePrice",
                    //     render: function (data, type, row, meta) {
                    //         var txt = '<div style="text-align: right">' + Number(row.tradePrice).toFixed(2) + '</div>';
                    //         return txt ;
                    //     }
                    // },
                    // {
                    //     data: "SalePrice",
                    //     render: function (data, type, row, meta) {
                    //         var txt = '<div style="text-align: right">' + Number(row.salePrice).toFixed(2) + '</div>';
                    //         return txt;
                    //     }
                    // },
                    {
                        data: "Action",
                        render: function (data, type, row, meta) {
                            var editBtn = "<a href='UpdateRecord/" + row.id + "' data-toggle='modal' data-target='#deleteModal' data-id='" + row.id + "' onclick='DeleteOnClick(" + row.id + ")'><i class='fas fa-pen text-warning m-1' title='Edit' aria-hidden='true'></i></a>";
                            var deleteBtn = "<a href='Delete/" + row.id + "' data-toggle='modal' data-target='#deleteModal' data-id='" + row.id + "' onclick='DeleteOnClick(" + row.id + ")'><i class='fas fa-trash text-danger m-1' title='Delete' aria-hidden='true'></i></a>";
                            var actionBtn = editBtn + deleteBtn;
                            return actionBtn;
                        }
                    }
                ]
            });
        }

        function DeleteOnClick(id) {
            $("#hidDeleteId").val(id);
        }
    </script>
}
