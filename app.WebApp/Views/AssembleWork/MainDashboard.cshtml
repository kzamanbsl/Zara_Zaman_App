@model app.Services.ATMAssemble.AssembleWorkServices.AssembleWorkMainDashboardViewModel
@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
    int sn = 1;
}

<style>
    .chart-box-shadow {
        padding: 10px 0;
        -webkit-box-shadow: 0px 0px 2px -9px rgba(0,0,0,0.1),0px 10px 15px -3px rgba(0,0,0,0.1);
        box-shadow: 0px 0px 2px -9px rgba(0,0,0,0.1),0px 10px 15px -3px rgba(0,0,0,0.1);
        border: 1px solid rgba(253, 253, 254, 0.8);
        border-radius: 2px;
    }

    .canvasjs-chart-credit {
        display: none !important;
    }
</style>
<div class="content-header">
    <div class="container-fluid ">
        <div class="breadcrumb d-flex justify-content-between align-items-center pl-3 pr-3">
            <ol class="breadcrumb mb-0 p-0">
                <li class="breadcrumb-item"><a href="/Admin/Index">Home</a></li>
                <li class="breadcrumb-item active"> Assembly Work (Main Dashboard)</li>
            </ol>
            <div>
                <a asp-action="MainDashboard"><i class="fa fa-plus"></i> Assembly Work (Main Dashboard)</a>
            </div>
        </div>
    </div>
</div>

<section class="content">
    <div class="container-fluid">
        <div class="card">
            <div class="card-header">
                <h5>
                    <i class="fas fa-list"></i> Assemble Work Summary (@Model.AssembleDate.ToString("dd-MM-yyyy"))
                </h5>
            </div>
            <div class="card-body">

                <div class="row">
                    <div class="col-4">
                        <div class="chart-box-shadow my-3">
                            <div id="pieChartContainer" style="height: 250px; width: 100%;"></div>
                        </div>
                    </div>
                    <div class="col-8">
                        <div class="chart-box-shadow my-3">
                            <div id="barChartContainer" style="height: 250px; width: 100%;"></div>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-12">
                        <div class="table-responsive">
                            <table id="assembleWorkMainDashboardTable" class="table table-bordered">
                                <thead>
                                    <tr>
                                        <th class="text-center">#</th>
                                        <th class="text-center">Assemble Work</th>
                                        <th class="text-center">Engineers</th>
                                        <th class="text-center">Today’s Target</th>
                                        <th class="text-center">Work Done</th>
                                        <th class="text-center">Fault Quantity</th>
                                        <th class="text-center">Achievement</th>
                                    </tr>
                                </thead>

                                <tbody>
                                    @if (Model.MainDashboardList != null && Model.MainDashboardList.Any())
                                    {
                                        @foreach (var item in Model.MainDashboardList)
                                        {
                                            <tr>
                                                <td class="text-center">@sn</td>
                                                <td class="text-left">
                                                    @Html.DisplayFor(modelItem => item.AssembleWorkCategoryName)
                                                </td>
                                                <td class="text-left">
                                                    @*  @if (item.EmployeeList.Count() > 0)
                                            {
                                            String.Join(", ", item.EmployeeList.Select(s=>s.Name));
                                            } *@
                                                    @Html.DisplayFor(modelItem => item.EmployeesName)
                                                </td>
                                                <td class="text-right">
                                                    @Html.DisplayFor(modelItem => item.TodayTarget)
                                                </td>
                                                <td class="text-right">
                                                    @Html.DisplayFor(modelItem => item.WorkCompleted)
                                                </td>
                                                <td class="text-right">
                                                    @Html.DisplayFor(modelItem => item.FaultQty)
                                                </td>
                                                <td class="text-right">
                                                    @Html.DisplayFor(modelItem => item.Achievement) %
                                                </td>
                                            </tr>
                                            sn++;
                                        }
                                    }
                                    else
                                    {
                                        <tr>
                                            <td colspan="7">
                                                <div class="text-center">No Data Found!</div>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

</section>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    @* PieChart integration (Dynamic) *@
    @if (Model.MainDashboardList != null && Model.MainDashboardList.Any())
    {
        <script type="application/javascript">
            window.onload = function () {
                var pieDataPoints = [];
            @foreach (var item in Model.MainDashboardList)
            {
                @:pieDataPoints.push({ label: "@item.AssembleWorkCategoryName", y: @(item.Achievement > 0 ? item.Achievement : 1)});
            }

                var pieOptions = {
                    animationEnabled: true,
                    title: {
                        text: "Achievement Analysis"
                    },
                    data: [{
                        type: "pie",
                        startAngle: 45,
                        showInLegend: true,
                        legendText: "{label}",
                        indexLabel: "{label} ({y}/100%)",
                        yValueFormatString: "#,##0.#",
                        dataPoints: pieDataPoints
                    }]
                };

                $("#pieChartContainer").CanvasJSChart(pieOptions);

                var barOptions = {
                    animationEnabled: true,
                    title: {
                        text: "Day-wise Analysis"
                    },
                    axisY: {
                        suffix: "%"
                    },
                    toolTip: {
                        shared: true,
                        reversed: true
                    },
                    legend: {
                        reversed: true,
                        verticalAlign: "center",
                        horizontalAlign: "right"
                    },
                    data: [
                        {
                            type: "stackedColumn100",
                            name: "Pending",
                            showInLegend: true,
                            yValueFormatString: "#,##0\"%\"",
                            dataPoints: [
                                { label: "8/2/2024", y: 20 },
                                { label: "7/2/2024", y: 35 },
                                { label: "6/2/2024", y: 10 },
                                { label: "5/2/2024", y: 5 },
                                { label: "4/2/2024", y: 10 },
                                { label: "3/2/2024", y: 5 },
                                { label: "2/2/2024", y: 20 },
                            ]
                        },
                        {
                            type: "stackedColumn100",
                            name: "Fault",
                            showInLegend: true,
                            yValueFormatString: "#,##0\"%\"",
                            dataPoints: [
                                { label: "8/2/2024", y: 10 },
                                { label: "7/2/2024", y: 5 },
                                { label: "6/2/2024", y: 10 },
                                { label: "5/2/2024", y: 5 },
                                { label: "4/2/2024", y: 20 },
                                { label: "3/2/2024", y: 15 },
                                { label: "2/2/2024", y: 15 }
                            ]
                        },
                        {
                            type: "stackedColumn100",
                            name: "Completed",
                            showInLegend: true,
                            yValueFormatString: "#,##0\"%\"",
                            dataPoints: [
                                { label: "8/2/2024", y: 70 },
                                { label: "7/2/2024", y: 60 },
                                { label: "6/2/2024", y: 55 },
                                { label: "5/2/2024", y: 90 },
                                { label: "4/2/2024", y: 70 },
                                { label: "3/2/2024", y: 80 },
                                { label: "2/2/2024", y: 65 }
                            ]
                        }
                    ]
                };

                $("#barChartContainer").CanvasJSChart(barOptions);
            };
        </script>
    }

    <script>
        $(document).ready(function () {
            "use strict"

            $('#ATM-Assemble').addClass('menu-open');
            $('#AssembleWorkMainDashboard').addClass('active');

            // $('#assembleWorkTable').DataTable({
            //     "paging": true,
            //     "ordering": true,
            //     "info": true,
            //     order: [[0, 'asc']],
            // });
        });

        window.setTimeout(function () {
            window.location.reload();
        }, 30000);

        // PieChart integration (Static)
        // window.onload = function () {

        //     var pieOptions = {
        //         title: {
        //             text: "Achievement Analysis"
        //         },
        //         data: [{
        //             type: "pie",
        //             startAngle: 45,
        //             showInLegend: "true",
        //             legendText: "{label}",
        //             indexLabel: "{label} ({y}/100%)",
        //             yValueFormatString: "#,##0.#" % "",
        //             dataPoints: [
        //                 { label: "IPC", y: 20.2 },
        //                 { label: "Receipt Printer", y: 32.2 },
        //                 { label: "Card Reader", y: 81.2 },
        //                 { label: "Monitor", y: 3 },
        //                 { label: "Note Feeder (NF)", y: 47.3 },
        //                 { label: "Transport", y: 14.9 }
        //             ]
        //         }]
        //     };
        //     $("#pieChartContainer").CanvasJSChart(pieOptions);
        // }



    </script>
}
