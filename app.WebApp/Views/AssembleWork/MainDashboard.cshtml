@model app.Services.ATMAssemble.AssembleWorkServices.AssembleWorkMainDashboardViewModel
@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
    int sn = 1;
}

<style>
    .chart-box-shadow {
        padding: 10px 0;
        -webkit-box-shadow: 0px 0px 2px -9px rgba(0,0,0,0.1),0px 10px 15px -3px rgba(0,0,0,0.1);
        box-shadow: 0px 0px 2px -9px rgba(0,0,0,0.1),0px 10px 15px -3px rgba(0,0,0,0.1);
        border: 1px solid rgba(253, 253, 254, 0.8);
        border-radius: 2px;
    }

    .canvasjs-chart-credit {
        display: none !important;
    }
</style>
<div class="content-header">
    <div class="container-fluid ">
        <div class="breadcrumb d-flex justify-content-between align-items-center pl-3 pr-3">
            <ol class="breadcrumb mb-0 p-0">
                <li class="breadcrumb-item"><a href="/Admin/Index">Home</a></li>
                <li class="breadcrumb-item active"> Assembly Work (Main Dashboard)</li>
            </ol>
            <div>
                <a asp-action="MainDashboard"><i class="fa fa-plus"></i> Assembly Work (Main Dashboard)</a>
            </div>
        </div>
    </div>
</div>

<section class="content">
    <div class="container-fluid">
        <div class="card">
            <div class="card-header">
                <h5>
                    <i class="fas fa-list"></i> Assemble Work Summary (@Model.AssembleDate.ToString("dd-MM-yyyy"))
                </h5>
            </div>
            <div class="card-body">

                <div class="row">
                    <div class="col-4">
                        <div class="chart-box-shadow my-3">
                            <div id="pieChartContainer" style="height: 320px; width: 100%;"></div>
                        </div>
                    </div>
                    <div class="col-8">
                        <div class="chart-box-shadow my-3">
                            <div id="barChartContainer" style="height: 320px; width: 100%;"></div>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-12">
                        <div class="table-responsive">
                            <table id="assembleWorkMainDashboardTable" class="table table-bordered">
                                <thead>
                                    <tr>
                                        <th class="text-center">#</th>
                                        <th class="text-center">Assemble Work</th>
                                        <th class="text-center">Engineers</th>
                                        <th class="text-center">Today’s Target</th>
                                        <th class="text-center">Work Done</th>
                                        <th class="text-center">Fault Quantity</th>
                                        <th class="text-center">Achievement</th>
                                    </tr>
                                </thead>

                                <tbody>
                                    @if (Model.MainDashboardList != null && Model.MainDashboardList.Any())
                                    {
                                        @foreach (var item in Model.MainDashboardList)
                                        {
                                            <tr>
                                                <td class="text-center">@sn</td>
                                                <td class="text-left">
                                                    @Html.DisplayFor(modelItem => item.AssembleWorkCategoryName)
                                                </td>
                                                <td class="text-left">
                                                    @*  @if (item.EmployeeList.Count() > 0)
                                            {
                                            String.Join(", ", item.EmployeeList.Select(s=>s.Name));
                                            } *@
                                                    @Html.DisplayFor(modelItem => item.EmployeesName)
                                                </td>
                                                <td class="text-right">
                                                    @Html.DisplayFor(modelItem => item.TodayTarget)
                                                </td>
                                                <td class="text-right">
                                                    @Html.DisplayFor(modelItem => item.WorkCompleted)
                                                </td>
                                                <td class="text-right">
                                                    @Html.DisplayFor(modelItem => item.FaultQty)
                                                </td>
                                                <td class="text-right">
                                                    @Html.DisplayFor(modelItem => item.Achievement) %
                                                </td>
                                            </tr>
                                            sn++;
                                        }
                                    }
                                    else
                                    {
                                        <tr>
                                            <td colspan="7">
                                                <div class="text-center">No Data Found!</div>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

</section>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script type="text/javascript" src="https://cdn.canvasjs.com/jquery.canvasjs.min.js"></script>

    <script>
        $(document).ready(function () {
            "use strict"

            $('#ATM-Assemble').addClass('menu-open');
            $('#AssembleWorkMainDashboard').addClass('active');

            // $('#assembleWorkTable').DataTable({
            //     "paging": true,
            //     "ordering": true,
            //     "info": true,
            //     order: [[0, 'asc']],
            // });
        });

        // window.setTimeout(function () {
        //     window.location.reload();
        // }, 30000);

    </script>

    @if (Model.MainDashboardList != null && Model.MainDashboardList.Any())
    {
        <script type="application/javascript">
                                window.onload = function () {
                                    var pieDataPoints = [];
                                    var completedDataPoints = [];
                                    var faultDataPoints = [];
                                    var pendingDataPoints = [];
            @foreach (var item in Model.MainDashboardList)
            {
                decimal targetedWork = item.TodayTarget;
                @*  decimal completedWork = item.WorkCompleted;
                decimal faultWork = item.FaultQty;
                decimal pendingWork = targetedWork - completedWork; *@

                @* decimal completedPercentage = targetedWork > 0 ? (100 * completedWork) / targetedWork : 0;
                decimal faultWorkPercentage = targetedWork > 0 ? (100 * faultWork) / targetedWork : 0;
                decimal pendingWorkPercentage = targetedWork > 0 ? (100 * pendingWork) / targetedWork : 0; *@

                decimal minPercentage = 0.1M;
                @* completedPercentage = completedPercentage > 0 ? completedPercentage : minPercentage;
                faultWorkPercentage = faultWorkPercentage > 0 ? faultWorkPercentage : minPercentage;
                pendingWorkPercentage = pendingWorkPercentage > 0 ? pendingWorkPercentage : minPercentage; *@

                @:pieDataPoints.push({ label: "@item.AssembleWorkCategoryName", y: @(item.Achievement > 0 ? item.Achievement : minPercentage)});
                @* @:completedDataPoints.push({ label: "@item.AssembleWorkCategoryName", y: @(completedPercentage)});
    @:faultDataPoints.push({ label: "@item.AssembleWorkCategoryName", y: @(faultWorkPercentage)});
    @:pendingDataPoints.push({ label: "@item.AssembleWorkCategoryName", y: @(pendingWorkPercentage)}); *@

                @:completedDataPoints.push({ label: "@item.AssembleWorkCategoryName", y: @(item.WorkCompleted > 0 ? item.WorkCompleted : 0)});
                @:faultDataPoints.push({ label: "@item.AssembleWorkCategoryName", y: @(item.FaultQty > 0 ? item.FaultQty : 0)});
                @:pendingDataPoints.push({ label: "@item.AssembleWorkCategoryName", y: @((item.TodayTarget - (item.WorkCompleted + item.FaultQty)) > 0 ? (item.TodayTarget - (item.WorkCompleted + item.FaultQty)) : 0)});
            }

                                    var pieOptions = {
                                        animationEnabled: true,
                                        title: {
                                            text: "Daily Achievement"
                                        },
                                        data: [{
                                            type: "pie",
                                            startAngle: 45,
                                            showInLegend: true,
                                            legendText: "{label}",
                                            indexLabel: "{label} ({y}/100%)",
                                            yValueFormatString: "#,##0.#",
                                            dataPoints: pieDataPoints
                                        }]
                                    };

                                    var barOptions = {
                                        animationEnabled: true,
                                        title: {
                                            text: "Daily Work Analysis"
                                        },
                                        axisY: {
            @* suffix: "%" *@
                                        },
                                        toolTip: {
                                            shared: true,
                                            reversed: true
                                        },
                                        legend: {
                                            reversed: true,
                                            verticalAlign: "center",
                                            horizontalAlign: "right"
                                        },
                                        data: [
                                          {
                                                type: "stackedColumn",
                                                name: "Completed",
                                                showInLegend: true,
            @* yValueFormatString: "#,##0\"%\"", *@
                                                yValueFormatString: "#,##0\"\"",
                                                dataPoints: completedDataPoints
                                            },
                                             {
                                                type: "stackedColumn",
                                                name: "Fault",
                                                showInLegend: true,
            @* yValueFormatString: "#,##0\"%\"", *@
                                                yValueFormatString: "#,##0\"\"",
                                                dataPoints: faultDataPoints
                                            },
                                            {
                                                type: "stackedColumn",
                                                name: "Pending",
                                                showInLegend: true,
            @* yValueFormatString: "#,##0\"%\"", *@
                                                yValueFormatString: "#,##0\"\"",
                                                dataPoints: pendingDataPoints
                                            }
                                        ]
                                    };

                                    $("#pieChartContainer").CanvasJSChart(pieOptions);
                                    $("#barChartContainer").CanvasJSChart(barOptions);
                                };
        </script>
    }


}
