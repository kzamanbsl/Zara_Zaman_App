@using app.Utility;
@model app.Services.AssetAllocationServices.AssetAllocationSearchDto
@{
    ViewData["Title"] = "Search";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="content-header">
    <div class="container-fluid ">
        <div class="breadcrumb d-flex justify-content-between align-items-center  pl-3 pr-3">
            <ol class="breadcrumb mb-0 p-0">
                <li class="breadcrumb-item"><a href="/Admin/Index">Home</a></li>
                <li class="breadcrumb-item active"> Asset Allocation List </li>
            </ol>
            <div>
                <a asp-action="AddAssetAllocationAndDetail"><i class="fa fa-plus"></i>  Add Asset Allocation </a>
            </div>
        </div>
    </div>
</div>


<section class="content">
    <div class="container-fluid">
        <div class="card">
            <div class="card-header">
                <div class="row w-100">
                    <div class="col-sm-3">
                        <h5> <i class="fas fa-list"></i>  All Asset Allocation </h5>
                    </div>
                </div>
            </div>

            <div class="card-body">

                <div class="row">
                    <div class="col-sm-12">
                        <form method="post" asp-controller="AssetAllocation" asp-action="Search">
                            <div class="row">
                                <div class="col-sm-6">
                                    <div class="form-group">
                                        <label>Employee</label>
                                        <select class="form-control" asp-for="EmployeeId" asp-items="ViewBag.EmployeeList">
                                            <option value="0" selected>-- Select Employee --</option>
                                            <span asp-validation-for="EmployeeId" class="text-danger"></span>
                                        </select>
                                    </div>
                                </div>
                                <div class="col-sm-6">
                                    <div class="form-group">
                                        <label>Department</label>
                                        <select class="form-control" asp-for="DepartmentId" asp-items="ViewBag.DepartmentList">
                                            <option value="0" selected>-- Select Department --</option>
                                            <span asp-validation-for="DepartmentId" class="text-danger"></span>
                                        </select>
                                    </div>
                                </div>
                            </div>

                            <div class="form-group text-right">
                                <input id="AssetAllocationDTSearchBtn" type="button" value="Search" class="btn btn-info btn-width" />
                                <a href="@Url.Action("Search","AssetAllocation")"><input type="button" value="Clear" class="btn btn-warning btn-width" /></a>
                            </div>
                        </form>
                    </div>
                </div>
                <hr />

                <div class="row">
                    <div class="col-sm-12">
                        <div class="table-responsive">
                            <table id="AssetPurchaseOrderSearchTable" class="table table-bordered table-sm">
                                <thead>
                                    <tr>
                                        <th class="text-center">
                                            @Html.DisplayNameFor(model => model.SerialNo)
                                        </th>
                                        <th class="text-center">
                                            @Html.DisplayNameFor(model => model.OrderNo)
                                        </th>
                                        <th class="text-center">
                                            @Html.DisplayNameFor(model => model.Date)
                                        </th>
                                        <th class="text-center">
                                            @Html.DisplayNameFor(model => model.EmployeeName)
                                        </th>
                                        <th class="text-center">
                                            @Html.DisplayNameFor(model => model.DepartmentName)
                                        </th>
                                        <th class="text-center">
                                            @Html.DisplayNameFor(model => model.AssetAllocationStatusId)
                                        </th>
                                        <th class="text-center">
                                            @Html.DisplayNameFor(model => model.Remarks)
                                        </th>
                                        <th class="text-center">
                                            @Html.DisplayNameFor(model => model.Action)
                                        </th>
                                    </tr>
                                </thead>
                                <tbody>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

</section>

<div class="modal fade" tabindex="-1" id="editAssetAllocationModal" data-toggle="modal" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <form asp-action="UpdateAssetAllocationMaster" method="post">


                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">Update Asset Allocation </h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>

                <div class="modal-body">

                    @Html.HiddenFor(model => model.Id, new { id = "hidPOID" })
                    @*
                    <div class="form-group">
                    <label>Order No </label>
                    <input asp-for="OrderNo" id="orderNo" class="form-control" autocomplete="off" required />
                    <span asp-validation-for="OrderNo" class="text-danger"></span>
                    </div>
                    *@
                    <div class="form-group">
                        <label>Asset Date </label>
                        <input asp-for="Date" id="date" class="form-control" type="date" autocomplete="off" required />
                        <span asp-validation-for="Date" class="text-danger"></span>
                    </div>

                    <div class="form-group">
                        <label>Employee Name</label>
                        <select class="form-control" id="employeeId" asp-for="EmployeeId" asp-items="ViewBag.EmployeeList" required>
                            <option value="0" selected>-- Select Employee --</option>
                            <span asp-validation-for="Employee" class="text-danger"></span>
                        </select>
                    </div>

                    <div class="form-group">
                        <label>Department  Name</label>
                        <select class="form-control" id="departmentId" asp-for="DepartmentId" asp-items="ViewBag.DepartmentList" required>
                            <option value="0" selected>-- Select Department --</option>
                            <span asp-validation-for="DepartmentId" class="text-danger"></span>
                        </select>
                    </div>
                    <div class="form-group">
                        <label asp-for="Remarks" id="remarks" class="control-label">Remarks</label>
                        <textarea asp-for="Remarks" class="form-control" rows="2"></textarea>
                    </div>

                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-primary">Update</button>
                </div>
            </form>

        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>

        function makeEditble(rowId) {
            $.ajax({
                type: "POST",
                url: "@Url.Action("UpdateAssetAllocation", "AssetAllocation")",
                datatype: "Json",
                data: { id: rowId },

                success: function (data) {
                    $("#hidPOID").val(data.id);

                    // Parse date if needed and adjust for timezone
                    var date = new Date(data.date);
                    var offset = date.getTimezoneOffset();
                    date = new Date(date.getTime() - (offset * 60 * 1000));

                    // Format date as YYYY-MM-DD
                    var formattedDate = purchaseDate.toISOString().split('T')[0];

                    // Set value
                    // $("#orderNo").val(data.orderNo);
                    $("#date").val(date);
                    $("#employeeId").val(data.employeeId);
                    $("#departmentId").val(data.departmentId);
                    $("#remarks").val(data.Tags);
                }
            });
        }

        $(document).ready(function () {
            $('#Asset-Management').addClass('menu-open');
            $('#AssetAllocationSearch').addClass('active');

            search();
        });

        $(document.body).on("click", "#AssetAllocationDTSearchBtn", function () {
            search();
        });

        function getSearchObject() {

            var searchVm = {
                
            }
            return searchVm;
        }

        function search() {
            var searchVm = getSearchObject();

            if ($.fn.DataTable.isDataTable("#AssetAllocationSearchTable")) {
                var table = $("#AssetAllocationSearchTable").DataTable();
                table.destroy();
            }

            var params = "";
            if (searchVm != undefined && searchVm !== "") {
                params = { searchVm: searchVm }
            }

            var oTable = $("#AssetAllocationSearchTable").DataTable({
                "aLengthMenu": [[25, 50, 100, 200], [25, 50, 100, 200]],
                "iDisplayLength": 25,
                "processing": true,
                "serverSide": true,
                "bSort": false,
                "ajax": {
                    url: "/AssetAllocation/Search",
                    type: "POST",
                    data: params
                },

                "columns": [
                    {
                        data: "SerialNo",
                        render: function (data, type, row, meta) {
                            return row.serialNo;
                        }
                    },
                    {
                        data: "OrderNo",
                        render: function (data, type, row, meta) {
                            return row.orderNo;
                        }
                    },
                    {
                        data: "Date",
                        render: function (data, type, row, meta) {
                            return row.date;
                        }
                    },
                    {
                        data: "EmployeeName",
                        render: function (data, type, row, meta) {
                            return row.employeeName;
                        }
                    },
                    {
                        data: "DepartmentName",
                        render: function (data, type, row, meta) {
                            return row.departmentName;
                        }
                    },
                    {
                        data: "AssetAllocationStatusId",
                        render: function (data, type, row, meta) {
                         return row.assetAllocationStatusId;
                        }
                    },
                    {
                        data: "Remarks",
                        render: function (data, type, row, meta) {
                            return row.remarks;
                        }
                    },
                    // {
                    //     data: "TotalAmount",
                    //     render: function (data, type, row, meta) {
                    //         var txt = '<div style="text-align: right">' + Number(row.totalAmount).toFixed(2) + '</div>';
                    //         return txt;
                    //     }
                    // },
                    {
                        data: "Action",
                        render: function (data, type, row, meta) {
                            var editBtn = "<a onclick='MakeEditable(" + row.id + ");' data-toggle='modal' data-target='#editAssetAllocationModal' data-placement='top'><i class='fas fa-pen text-warning m-1' title='Edit' aria-hidden='true'></i></a>";
                            var detailsBtn = "<a href='AssetAllocationDetails/" + row.id + "'><i class='fa fa-eye text-info m-1' title='Details' aria-hidden='true'></i></a>";
                            var deleteBtn = "<a href='DeleteAssetAllocation/" + row.id + "'><i class='fas fa-trash text-danger m-1' title='Delete' aria-hidden='true'></i></a>";
                            var actionBtn = editBtn + detailsBtn + deleteBtn;
                            return actionBtn;
                        }
                    }
                ]
            });
        }
    </script>
}
