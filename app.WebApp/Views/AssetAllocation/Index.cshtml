@using app.Utility
@model app.Services.AssetAllocationServices.AssetAllocationViewModel
@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
    int SN = 1;
}

<div class="content-header">
    <div class="container-fluid ">
        <div class="breadcrumb d-flex justify-content-between align-items-center  pl-3 pr-3">
            <ol class="breadcrumb mb-0 p-0">
                <li class="breadcrumb-item"><a href="/Admin/Index">Home </a></li>
                <li class="breadcrumb-item active">Asset Allocation Order List </li>
            </ol>
            <div>
                <a asp-action="AddAssetAllocationAndDetail"><i class="fa fa-plus"></i>Add Asset Allocation Order </a>
            </div>
        </div>
    </div>
</div>

<section class="content">
    <div class="container-fluid">
        <div class="card">
            <div class="card-header">
                <div class="row w-100">
                    <div class="col-sm-3">
                        <h5> <i class="fas fa-list"></i> All Asset Allocation Order</h5>
                    </div>
                </div>
            </div>
            <div class="card-body">
                <div class="table-responsive">
                    <table id="AssetAllocationtable" class="table table-sm table-bordered">
                        <thead>
                            <tr>
                                <th>SL</th>
                                <th class="text-center">Allocation Order No</th>
                                <th class="text-center">Product </th>
                                <th class="text-center">Quantity </th>
                                <th class="text-center">Tags  </th>
                                <th class="text-center">Remarks</th>
                                @* <th class="text-center">Total Amount</th> *@
                                <th class="text-center">Action</th>
                            </tr>
                        </thead>

                        <tbody>
                            @foreach (var item in Model.AssetAllocationList)
                            {
                                <tr>
                                    <td style="width:10px;">@(++SN)</td>
                                    <td>@item.OrderNo</td>
                                    <td>@item.ProductName</td>
                                    <td>@item.Quantity </td>
                                    <td>@item.Tags </td>
                                    <td>@item.Remarks </td>
                                    <td>@item.AssetAllocationStatusName</td>
                                    @* <td>@item.TotalAmount</td> *@
                                    @if (@item.AssetAllocationStatusId == (int)AasetAllocationStatusEnum.Receive || @item.AssetAllocationStatusId == (int)AasetAllocationStatusEnum.Reject)
                                    {
                                        <td class="text-center"> @Html.ActionLink("", "AssetAllocationDetails", new { id = item.Id }, new { @title = "Details", @class = "text-primary fas fa-eye"})</td>
                                    }
                                    @if (@item.AssetAllocationStatusId == (int)AasetAllocationStatusEnum.Draft || @item.AssetAllocationStatusId == (int)AasetAllocationStatusEnum.Confirm)
                                    {
                                        <td class="text-center">

                                            <a id="@item.Id" onclick=" makeEditble(@item.Id);" class="linkPointer" data-toggle="modal" data-target="#editAssetAllocationModal" title="Edit" data-placement="top"><i class="text-warning fas fa-edit" aria-hidden="true"></i></a> |
                                            @Html.ActionLink("", "DeleteAssetAllocation", new { id = item.Id }, new { @title = "Delete", @class = "text-danger fas fa-trash", onclick = "return confirm('Are you sure you want to delete this?')" }) |
                                            @Html.ActionLink("", "AssetAllocationDetails", new { id = item.Id }, new { @title = "Details", @class = "text-primary fas fa-eye"})
                                        </td>
                                    }
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</section>




<div class="modal fade" tabindex="-1" id="editAssetAllocationModal" data-toggle="modal" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <form asp-action="UpdateAssetAllocationMaster" method="post">


                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">Update Asset Allocation Order</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>

                <div class="modal-body">

                    @Html.HiddenFor(model => model.Id, new { id = "hidPOID" })

                    <div class="form-group">
                        <label>Order No </label>
                        <input asp-for="OrderNo" id="orderNo" class="form-control" autocomplete="off" required />
                        <span asp-validation-for="OrderNo" class="text-danger"></span>
                    </div>

                    <div class="form-group">
                        <label>Product</label>
                        <select class="form-control" id="productId" asp-for="ProductId" asp-items="ViewBag.ProductList" required>
                            <option value="0" selected>-- Select Product --</option>
                            <span asp-validation-for="ProductId" class="text-danger"></span>
                        </select>
                    </div>

                    <div class="form-group">
                        <label>Quantity  </label>
                        <input asp-for="Quantity" id="ouantity " class="form-control" autocomplete="off" required />
                        <span asp-validation-for="OrderNo" class="text-danger"></span>
                    </div>

                    <div class="form-group">
                        <label>Tags  </label>
                        <input asp-for="Tags" id="tags" class="form-control" autocomplete="off" required />
                        <span asp-validation-for="Tags" class="text-danger"></span>
                    </div>

                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-primary">Update</button>
                </div>
            </form>

        </div>
    </div>
</div>









@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        
        $(document).ready(function () {
            // var reject = document.getElementById('OrderStatusId').val(AssetAllocationStatusEnum.Reject);
            $('#Asset-Management').addClass('menu-open');
            $('#AssetAllocationIndex').addClass('active');
            $('#AssetAllocationtable').DataTable({
                "paging": true,
                "ordering": true,
                "info": true,
                order: [[0, 'asc']],
            });
        });

        function makeEditble(rowId) {
            $.ajax({
                type: "POST",
                url: "@Url.Action("UpdateAssetAllocation", "AssetAllocation")",
                datatype: "Json",
                data: { id: rowId },
                success: function (data) {
                    $("#hidPOID").val(data.id);

                    // Parse date if needed and adjust for timezone
                    // var purchaseDate = new Date(data.purchaseDate);
                    // var offset = purchaseDate.getTimezoneOffset();
                    // purchaseDate = new Date(purchaseDate.getTime() - (offset * 60 * 1000));

                    // // Format date as YYYY-MM-DD
                    // var formattedDate = purchaseDate.toISOString().split('T')[0];

                    // Set value
                    $("#orderNo").val(data.orderNo);
                    $("#productId").val(data.productId);
                    $("#ouantity").val(data.ouantity);
                    $("#Tags").val(data.Tags);
                }
            });
        }

    </script>

    }
