@model app.Services.UserServices.UserSearchDto
@{
    ViewData["Title"] = "Search";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="content-header">
    <div class="container-fluid ">
        <div class="breadcrumb d-flex justify-content-between align-items-center  pl-3 pr-3">
            <ol class="breadcrumb mb-0 p-0">
                <li class="breadcrumb-item"><a href="/Admin/Index">Home</a></li>
                <li class="breadcrumb-item active"> Users List </li>
            </ol>
            <div>
                <a asp-action="AddRecord"><i class="fa fa-plus"></i>  Add User </a>
            </div>
        </div>
    </div>
</div>


<section class="content">
    <div class="container-fluid">
        <div class="card">

            <div class="card-header">
                <div class="row w-100">
                    <div class="col-sm-3">
                        <h5> <i class="fas fa-list"></i>  All Users </h5>
                    </div>
                </div>
            </div>

            <div class="card-body">
                <div class="row">
                    <div class="col-sm-12">
                        <div class="table-responsive">
                            <table id="UserSearchTable" class="table table-bordered table-sm">
                                <thead>
                                    <tr>
                                        <th class="text-center">
                                            @Html.DisplayNameFor(model => model.SerialNo)
                                        </th>
                                        <th class="text-center">
                                            @Html.DisplayNameFor(model => model.FullName)
                                        </th>
                                        <th class="text-center">
                                            @Html.DisplayNameFor(model => model.UserName)
                                        </th>
                                        <th class="text-center">
                                            @Html.DisplayNameFor(model => model.Email)
                                        </th>
                                        <th class="text-center">
                                            @Html.DisplayNameFor(model => model.IsActive)
                                        </th>
                                        <th class="text-center">
                                            @Html.DisplayNameFor(model => model.Action)
                                        </th>
                                    </tr>
                                </thead>
                                <tbody>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

</section>
<!--Delete Modal-->

<div class="modal fade" tabindex="-1" id="deleteModal" data-toggle="modal" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <form asp-action="Delete" asp-controller="User" method="post">
                <div class="modal-header bg-light">
                    <h5 class="modal-title " id="exampleModalLabel">Delete User</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>

                <div class="modal-body">
                    <h3 class="text-danger">Are you sure to delete this?</h3>
                    @* @Html.HiddenFor(model => model.Id, new { id = "hidDeleteId" }) *@
                    @Html.HiddenFor(model => model.UserId, new { id = "hidDeleteUserId" })

                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-danger">Delete</button>
                </div>
            </form>

        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        $(document).ready(function () {
            $('#User-Management').addClass('menu-open');
            $('#UserSearch').addClass('active');

            search();
        });

        $(document.body).on("click", "#UserDTSearchBtn", function () {
            search();
        });

        function getSearchObject() {

            var searchVm = {
                "CategoryId": $("#CategoryId").val(),
                "UnitId": $("#UnitId").val(),
            }
            return searchVm;
        }

        function search() {
            var searchVm = getSearchObject();

            if ($.fn.DataTable.isDataTable("#UserSearchTable")) {
                var table = $("#UserSearchTable").DataTable();
                table.destroy();
            }

            var params = "";
            if (searchVm != undefined && searchVm !== "") {
                params = { searchVm: searchVm }
            }

            var oTable = $("#UserSearchTable").DataTable({
                "aLengthMenu": [[25, 50, 100, 200], [25, 50, 100, 200]],
                "iDisplayLength": 25,
                "processing": true,
                "serverSide": true,
                "bSort": false,
                "ajax": {
                    url: "/User/Search",
                    type: "POST",
                    data: params
                },

                "columns": [
                    {
                        data: "SerialNo",
                        render: function (data, type, row, meta) {
                            return row.serialNo;
                        }
                    },
                    {
                        data: "FullName",
                        render: function (data, type, row, meta) {
                            return row.fullName;
                        }
                    },
                    {
                        data: "UserName",
                        render: function (data, type, row, meta) {
                            return row.userName;
                        }
                    },
                    {
                        data: "Email",
                        render: function (data, type, row, meta) {
                            return row.email;
                        }
                    },
                    {
                        data: "IsActive",
                        render: function (data, type, row, meta) {
                            var result = "";
                            if (row.isMenuShow == false) {
                                var result = '<b class="text-danger" > <i class="fas fa-times-circle fa-2x" style = "font-size:20px" > </i></b >';
                            }
                            else {
                                var result = '<b class="text-success" > <i class="fas fa-check-square" style = "font-size:20px" > </i></b >';
                            }
                            return result;
                        }
                    },
                    {
                        data: "Action",
                        render: function (data, type, row, meta) {
                            var editBtn = "<a href='UpdateRecord/" + row.userId + "'><i class='fas fa-pen text-warning m-1' title='Edit' aria-hidden='true'></i></a>";
                            var deleteBtn = `<a href='Delete/${row.userId}' data-toggle='modal' data-target='#deleteModal' data-id='${row.userId}' onclick='DeleteOnClick("${row.userId}")'><i class='fas fa-trash text-danger m-1' title='Delete' aria-hidden='true'></i></a>`;
                            var actionBtn = editBtn + deleteBtn;
                            return actionBtn;
                        }
                    }
                ]
            });
        }

        //Delete Modal
        function DeleteOnClick(userId) {
            $("#hidDeleteUserId").val(userId)
        }

    </script>
}
